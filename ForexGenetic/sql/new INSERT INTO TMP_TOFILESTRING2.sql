SET feedback ON; 
SET ECHO ON;
SPOOL ON;

TRUNCATE TABLE TMP_TOFILESTRING2;

INSERT INTO TMP_TOFILESTRING2 (ID_INDIVIDUO, CRITERIO_ORDER1, CRITERIO_ORDER2, VIGENCIA1, VIGENCIA2, FECHA_ORDER1, FECHA_ORDER2)
  SELECT PTFS.ID_INDIVIDUO, 
  MIN(PTFS.PIPS_SEMANA),
	ROUND((MIN(PTFS.PIPS_SEMANA)+MIN(PTFS.PIPS_MES)+MIN(PTFS.PIPS_ANYO)+MIN(PTFS.PIPS_TOTALES))/4),
	--MAX(PERI.PIPS_TOTALES_PARALELAS),
  PTFS.FECHA_SEMANA, PTFS.FECHA_SEMANA+7, 
  --PTFS.FECHA_SEMANA, MAX(PERI.FECHA_FINAL)+7,
  MAX(PERI.FECHA), MAX(PERI.FECHA_FINAL) 
  --TRUNC(PERI.FECHA_FINAL)+1, TRUNC(PERI.FECHA_FINAL)+8, MAX(PERI.FECHA), MAX(PERI.MAX_FECHA_CIERRE)
  FROM PREVIO_TOFILESTRING PTFS
	INNER JOIN ESTRATEGIA_OPERACION_PERIODO PERI
		ON ( --PTFS.PIPS_SEMANA IS NOT NULL AND PTFS.PIPS_SEMANA>0 AND
			 NVL(PTFS.PIPS_SEMANA,0)>PERI.FILTRO_PIPS_X_SEMANA AND PTFS.PIPS_MES>PERI.FILTRO_PIPS_X_MES 
			AND PTFS.PIPS_ANYO>PERI.FILTRO_PIPS_X_ANYO AND PTFS.PIPS_TOTALES>PERI.FILTRO_PIPS_TOTALES)
			AND (NVL(PTFS.R2_SEMANA,0)>PERI.FILTRO_R2_SEMANA AND PTFS.R2_MES>PERI.FILTRO_R2_MES 
			AND PTFS.R2_ANYO>PERI.FILTRO_R2_ANYO AND PTFS.R2_CONSOL>PERI.FILTRO_R2_TOTALES)
			AND (NVL(PTFS.PENDIENTE_SEMANA,0)>PERI.FILTRO_PENDIENTE_SEMANA AND PTFS.PENDIENTE_MES>PERI.FILTRO_PENDIENTE_MES 
			AND PTFS.PENDIENTE_ANYO>PERI.FILTRO_PENDIENTE_ANYO AND PTFS.PENDIENTE_CONSOL>PERI.FILTRO_PENDIENTE_TOTALES)
			AND PTFS.TIPO_OPERACION=PERI.TIPO_OPERACION
			AND PTFS.FECHA_SEMANA BETWEEN PERI.FECHA_FINAL AND (PERI.FECHA_FINAL+7) --ADD_MONTHS(PERI.FECHA_FINAL,1)
			AND PTFS.FECHA_SEMANA BETWEEN PERI.MAX_FECHA_CIERRE AND (PERI.MAX_FECHA_CIERRE+7) --ADD_MONTHS(PERI.MAX_FECHA_CIERRE,1)
  WHERE 
	((PERI.TIPO_OPERACION='BUY' AND PERI.PIPS_TOTALES>1000 
	  AND PERI.PIPS_TOTALES_PARALELAS>PERI.PIPS_TOTALES
	  AND PERI.PIPS_TOTALES_PARALELAS>3000
	  AND (PERI.PIPS_AGRUPADO_MINUTOS>1000 AND PERI.PIPS_AGRUPADO_HORAS>1000 AND PERI.PIPS_AGRUPADO_DIAS>1000)
	  AND (PERI.CANTIDAD_PARALELAS/PERI.CANTIDAD)<10	  
	  AND (PERI.CANTIDAD_PARALELAS/PERI.CANTIDAD)>1
	  AND PERI.CANTIDAD_INDIVIDUOS>1
	  AND PERI.CANTIDAD/((PERI.FECHA_FINAL-PERI.FECHA_INICIAL)/30)>1
	  AND (PERI.PIPS_TOTALES/PERI.CANTIDAD)>200
	  --AND (PERI.PIPS_TOTALES_PARALELAS/PERI.CANTIDAD_PARALELAS)>200
	 ) OR
	(PERI.TIPO_OPERACION='SELL' AND PERI.PIPS_TOTALES>0  
	  AND PERI.PIPS_TOTALES_PARALELAS>0
	 ) OR
	(PERI.PIPS_TOTALES<=1000
	  AND PERI.PIPS_TOTALES_PARALELAS>0
	  AND (PERI.PIPS_AGRUPADO_MINUTOS>0 AND PERI.PIPS_AGRUPADO_HORAS>0 AND PERI.PIPS_AGRUPADO_DIAS>0)
	  AND PERI.CANTIDAD_INDIVIDUOS>1
	  AND (PERI.PIPS_TOTALES_PARALELAS/PERI.CANTIDAD_PARALELAS)>200	
	 )
	)
	  AND PTFS.FECHA_SEMANA>TO_DATE('20131231','YYYYMMDD')
  GROUP BY PTFS.ID_INDIVIDUO, PTFS.FECHA_SEMANA;
commit;

@"d:\ricardorq85\JavaProjects\Git\genetic-forex\ForexGenetic\sql\ToFileStringFromTEMP_TOFILESTRING.sql";
